{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC332C8F0A52141C5e1e5e20D4610cF1Ce172593D",
    "txHash": "0x8a2a962256e56aa3a99c898ac3334d5a3fe615cfdcc8761710e9569e809ab782"
  },
  "proxies": [
    {
      "address": "0x76b0D0566cEaEDCBE4e816498bA36c2c496c3DaE",
      "txHash": "0x7f6228107fe4b117aaf72c8cb6b0a9a305dbf45af77daa3b42ae177b2b58b5c5",
      "kind": "transparent"
    },
    {
      "address": "0x6e07a2Ad6d434Cae0CC6897a21aDe388728AecFe",
      "txHash": "0x787db700f8b82107acc5b7db52af78922119c90a25be3cce7e5dd8fa6b3282e0",
      "kind": "transparent"
    },
    {
      "address": "0x1b9a69B2AECa1bfe0CeA52a33576090E3f5E9B4f",
      "txHash": "0xcceeb5eddff363287471267fe1678f4f33da57597f194494336371f08c7fa63f",
      "kind": "transparent"
    },
    {
      "address": "0x9f1569af8F419879660e64594BF399443d94D8b4",
      "txHash": "0xf0ee88549091ffdf6a3e9467638e782bb8241cf3fb7c235fa0689c73a6dd2cc4",
      "kind": "transparent"
    },
    {
      "address": "0xC7acAf36D681A9bBa99614b66B3e86055b8f7194",
      "txHash": "0x5d60d05cbf54c6d03f2c06751803cbcbf5c197684678eaafb80dafabd76345b0",
      "kind": "transparent"
    },
    {
      "address": "0x9bcA28F93A65ea8A9159481CC3dE76d72CA0Df9E",
      "txHash": "0x8621f0c80cde686b25b823fa180baf660134a6e5295ab7929dd6b68a9f6af043",
      "kind": "transparent"
    },
    {
      "address": "0xfa7E91eCe073A36dA9B685679B04b3F7843F9A9A",
      "txHash": "0x31bc93ab4e44faa8224dfafee0605d7ea19c00dbfba5916b36929d327ac8d890",
      "kind": "transparent"
    },
    {
      "address": "0x392825D3EFab31AfDaAa4FC3E005235Fd146377e",
      "txHash": "0xe4dcf4139cd52992fd5a049b9aa908d130fcbaf6320b89103c9143f2b05dc814",
      "kind": "transparent"
    },
    {
      "address": "0xf92d4e08EC0d20433C6Cc8A61b3cBD17BB8416FE",
      "txHash": "0xd45e6736679624a17961b54116a4545b77b561af3c1b619d603cd79843ea9a44",
      "kind": "transparent"
    },
    {
      "address": "0x67374aBb3517972ca505Cd9865679C1E413667d8",
      "txHash": "0x32a8b0a1dd677c7b6391a364da7ec5972f27fb3f8b95137947b4c9e11da092c6",
      "kind": "transparent"
    },
    {
      "address": "0xdCbe46278DaA0C8268EdfCf8204810f33892dcF2",
      "txHash": "0x571f23707808e768446196fc9c3217b2b3303d74efe053e07d69deba9c998ea2",
      "kind": "transparent"
    },
    {
      "address": "0xf9372a5936fAf1a51feA49F7752813c5be9e0c25",
      "txHash": "0xad00ba2db86a778a2afe41b83e37bc6bbe24b63a4274301a021c730ff8cea99a",
      "kind": "transparent"
    },
    {
      "address": "0x69b54D08b3654831C1c77B76659986f69F50DD79",
      "txHash": "0x2753393596f121136f7c7befb5b31be56d1e64e2c7e7d56a5234531988b50590",
      "kind": "transparent"
    },
    {
      "address": "0xaCDBf031F12FB52D48A1cf37186C7c5523daAc91",
      "txHash": "0x3470904ce06c503dd48d6da3359477bafa53569c3f4114dac25274cba603e9d0",
      "kind": "transparent"
    },
    {
      "address": "0x022b521cE44Dad17821d90281Fc6d872445847C7",
      "txHash": "0xe81d1fd108970b266ee8154974c7277a0fb00cd8bfd77815263fceaedf5ae643",
      "kind": "transparent"
    },
    {
      "address": "0xd111846deA266aE3c1A3C0309c0231d6C6D844B1",
      "txHash": "0x97fe3bacb7bebb6d066e5b92fe5294d9e120f3a68c3e08d2ed8e3065daef96af",
      "kind": "transparent"
    },
    {
      "address": "0x8b959530ea2BB32b9d8609b0Af912037cd1B27F0",
      "txHash": "0x479fa73842777871ed117c8b6ac1d9f949e9824713ed07a3a0124f03fc80e187",
      "kind": "transparent"
    },
    {
      "address": "0x0349F92eced7a291ffAAb6084D33393C760AEBb6",
      "txHash": "0x26b0388504d9f67dd02131d5a8403a359338d7d663aa1630151784e9f944384d",
      "kind": "transparent"
    },
    {
      "address": "0x8C3293079EDBb601137A1Cd4271Cd1BECc48A10F",
      "txHash": "0x0ca1bf1c5c5e20248cdbebc9c2cda257dc801c77cdadeaf9e6feea6fe8d10a79",
      "kind": "transparent"
    },
    {
      "address": "0xDd87a22Ca1f132E285ac813853082970ede06109",
      "txHash": "0xe9d2724c324a1f45802d735f5d383bfc8b1b6b3b300bac163418f320b2b3d765",
      "kind": "transparent"
    },
    {
      "address": "0x09526C9bb696b8a8E6F3C7D19D2cD6274353cf91",
      "txHash": "0x22b16b756f7e271327b71a94c500e8faa1bce76b166ebd3a27584d77461a0f87",
      "kind": "transparent"
    },
    {
      "address": "0x48B46dCC1fe6d5560dc515412270039239c30a1F",
      "txHash": "0xb082248db5ae28b540f02200d55215d941551ec229f2bca894daa72640f2c4c6",
      "kind": "transparent"
    },
    {
      "address": "0x4B71B509df69D528ebE92aa4d6B8E12A12fA92Dd",
      "txHash": "0x484334b3536cfa3f9b37ba40b47873b9cdedd0563fb48cbb9d93668fe708c288",
      "kind": "transparent"
    },
    {
      "address": "0xd27EeCc02d091b8fbCDAD42f0383F8E192b8237C",
      "txHash": "0x02be2d8ba5a449db1c2762a15a0af304a5fa9269b5e1ecacc3935b8adae5a22e",
      "kind": "transparent"
    },
    {
      "address": "0xCff26Ae566B1063872f7A43eaf114506BfA14E92",
      "txHash": "0xf0f311e53a9436ddc9341d590f62942d57916ddf452645da27e324ada983fef5",
      "kind": "transparent"
    },
    {
      "address": "0x1eBdd23f21467f1bf2061090Fe4462803F8909FC",
      "txHash": "0x83f1fbf2ee91e2941550b1816b1ca100891071c682a987670531bfd53dcad0b5",
      "kind": "transparent"
    },
    {
      "address": "0x60d18298145A4dD178dE96A43F8a4Ce1968ae0ca",
      "txHash": "0x4ee7d014aeacdbca7a20ae287269eb85539e456ded3990741b4b9c6ff56761cd",
      "kind": "transparent"
    },
    {
      "address": "0x808c3F11976F2E5af806aC927188385e6B974874",
      "txHash": "0x7f27003c44b01da7eae17535a0e12404c2d282a6e6123df8f17f41622e2622b8",
      "kind": "transparent"
    },
    {
      "address": "0xB968EA5A80bBe70b2925565FB435b8e9917eAc3B",
      "txHash": "0x362c239971dd984b42723a5c648e5c6b25c5d2800f7835c27c65088f00489f21",
      "kind": "transparent"
    },
    {
      "address": "0x93D8EBE2559cE3676AfBD5856309220129bC8363",
      "txHash": "0xf343de6bba47a8d20d861bf857ab7a3636e9fbca5ebab5c2756672f8c09f49e7",
      "kind": "transparent"
    },
    {
      "address": "0x6D114002efb81E99bb63A0207b455B935Dbb5F61",
      "txHash": "0xbc5c15b7d24c29586083fde80aad2cc465d9cf5421aa0ac773f234ddadfabdc4",
      "kind": "transparent"
    },
    {
      "address": "0x48ce33B8dD8f0FB7270C948249C3DbCA197AA251",
      "txHash": "0x83c41cd19921f232acc38dd81688a7dd32438064e7c2de6eab7ed733ac3eba68",
      "kind": "transparent"
    },
    {
      "address": "0xeDf225c1bdcD968Cf3cfa4be06bF2C74AbcceD66",
      "txHash": "0x0d731bec21c8cd2abe1e3f1cab77078f4bd335ff092d41c217f26753e88f4f58",
      "kind": "transparent"
    },
    {
      "address": "0xEC63a817DE4d1Cd1D8450BcE69dCF5E7f8CC070d",
      "txHash": "0xcf77f7206e046b5291fd57295c39e7b6ae8e99d15e59f5f48c31d3528c9d702b",
      "kind": "transparent"
    },
    {
      "address": "0xD90855782BDC01dB39a6f1761497cFD0108BE219",
      "txHash": "0x35c249ef66df9acc12d5e5435ee8cf728f51a9d1b569839904b114abd78ec437",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e95a35c32c3e0ca86941805faea5c313840ee1a5201011a9d70ba3ef3adbd109": {
      "address": "0xf803D649B87C0Cc1dE259cFe352e8C2d9382397D",
      "txHash": "0x31d7c01316177ec119631f69685d5d62b3ffe7e557774e9d053b1753d9873dbf",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "fungible",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(Asset)12973_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:95"
          },
          {
            "label": "fungibleIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:96"
          },
          {
            "label": "nonFungible",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Asset)12973_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:99"
          },
          {
            "label": "nonFungibleIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:100"
          },
          {
            "label": "playerToShip",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:103"
          },
          {
            "label": "nonFungibleTokenDatas",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NonFungibleTokenData)13011_storage))",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:106"
          },
          {
            "label": "shipInventories",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(InventorySpaceData)12992_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:109"
          },
          {
            "label": "playerInventories",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(InventorySpaceData)12992_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:112"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(PlayerInventoryData)13016_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:115"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:118"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(Inventory)16271": {
            "label": "enum Inventory",
            "members": [
              "Wallet",
              "Backpack",
              "Ship"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NonFungibleTokenData)13011_storage))": {
            "label": "mapping(address => mapping(uint256 => struct CryptopiaInventories.NonFungibleTokenData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Asset)12973_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.Asset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(InventorySpaceData)12992_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.InventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(NonFungibleTokenInventorySpaceData)13002_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.NonFungibleTokenInventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PlayerInventoryData)13016_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.PlayerInventoryData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(InventorySpaceData)12992_storage)": {
            "label": "mapping(uint256 => struct CryptopiaInventories.InventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NonFungibleTokenData)13011_storage)": {
            "label": "mapping(uint256 => struct CryptopiaInventories.NonFungibleTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)12973_storage": {
            "label": "struct CryptopiaInventories.Asset",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InventorySpaceData)12992_storage": {
            "label": "struct CryptopiaInventories.InventorySpaceData",
            "members": [
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fungible",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nonFungible",
                "type": "t_mapping(t_address,t_struct(NonFungibleTokenInventorySpaceData)13002_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NonFungibleTokenData)13011_storage": {
            "label": "struct CryptopiaInventories.NonFungibleTokenData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inventory",
                "type": "t_enum(Inventory)16271",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NonFungibleTokenInventorySpaceData)13002_storage": {
            "label": "struct CryptopiaInventories.NonFungibleTokenInventorySpaceData",
            "members": [
              {
                "label": "tokens",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensIndex",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PlayerInventoryData)13016_storage": {
            "label": "struct CryptopiaInventories.PlayerInventoryData",
            "members": [
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3edfde00eb6b6429e4d51e13fc3747d0d25ec9f9dd8c4045881cff332838aa54": {
      "address": "0xa5CBfD6a5417E1994132229E8042baBD09FbE4E6",
      "txHash": "0x6044c134636b735a0fa889ae19e9e47c76454826040bfe315d0b0c2a8e120127",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "list",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Whitelist",
            "src": "contracts\\source\\authentication\\whitelist\\Whitelist.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "b53930ae59e52795390c63b9736400ccd9547ceaee3be9a62e4154ef98e99d3c": {
      "address": "0xe29219D305f4B342D0B886C2B62e2bFB8E2fc30B",
      "txHash": "0xae756c6496b28be4177d3f8f7950d9fda670a181bdab0150832601919f5e30f6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2adbcc660cfa8a96d619222b807980c8434fac56f1c2d7b5709e0b53648391a1": {
      "address": "0x97cb724Bc13748D25A96B82C60D211F54384816b",
      "txHash": "0xf751e7fb77d7ef917c2de66c4966f35cc1e356974bb3c0fa9caa314cc5ba598d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "accountImplementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaAccountRegister",
            "src": "contracts\\source\\accounts\\concrete\\CryptopiaAccountRegister.sol:47"
          },
          {
            "label": "usernameToAccount",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "CryptopiaAccountRegister",
            "src": "contracts\\source\\accounts\\concrete\\CryptopiaAccountRegister.sol:49"
          },
          {
            "label": "accountDatas",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(AccountData)7009_storage)",
            "contract": "CryptopiaAccountRegister",
            "src": "contracts\\source\\accounts\\concrete\\CryptopiaAccountRegister.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Relationship)9930": {
            "label": "enum Relationship",
            "members": [
              "None",
              "Friend",
              "Family",
              "Spouse"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Sex)9924": {
            "label": "enum Sex",
            "members": [
              "Undefined",
              "Male",
              "Female"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_enum(Relationship)9930)": {
            "label": "mapping(address => enum Relationship)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccountData)7009_storage)": {
            "label": "mapping(address => struct CryptopiaAccountRegister.AccountData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(AccountData)7009_storage": {
            "label": "struct CryptopiaAccountRegister.AccountData",
            "members": [
              {
                "label": "username",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sex",
                "type": "t_enum(Sex)9924",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "friends",
                "type": "t_mapping(t_address,t_enum(Relationship)9930)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "friendsIndex",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "friendRequests",
                "type": "t_mapping(t_address,t_enum(Relationship)9930)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "fd5942822369b68434a96e618c6916e8385a5a8fa5d693241f50762ebd6fc371": {
      "address": "0x1010b270ceE9750c7f7999494EB7b214FAf22Af6",
      "txHash": "0x5a94bff7b184a00a7e495c121b1a68fc7a24fdb38c754b305ca8cf181b8e9dc0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "accountRegisterContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaAvatarRegister",
            "src": "contracts\\source\\avatars\\concrete\\CryptopiaAvatarRegister.sol:27"
          },
          {
            "label": "avatarDatas",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "CryptopiaAvatarRegister",
            "src": "contracts\\source\\avatars\\concrete\\CryptopiaAvatarRegister.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4b302d008d21166ae99d2ccc44c61ecba31f6ff479d17b8ef015eba604da9950": {
      "address": "0x2894DCbED0cB5DDD676FD780E1CB1f50c7310E5d",
      "txHash": "0xeefc0e25e858236280977aa0d20f74516197b38c43375a22b7819c588b91a260",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "assets",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:22"
          },
          {
            "label": "assetsIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:23"
          },
          {
            "label": "resources",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Resource)10817,t_address)",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Resource)10817": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)10817,t_address)": {
            "label": "mapping(enum Resource => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "93c99f3d1dad5f3c08467708aafe13ffd6ebf7bc78cd4d5400a61c10768b6668": {
      "address": "0x511DEc6F16326463F13c82AA95Bf915163fdBE51",
      "txHash": "0x1c6eaf3a47458455c8ba76cccea40509f16e1dc690e59720117eecb327d4023a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9942",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:75"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(ShipData)29412_storage)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:78"
          },
          {
            "label": "shipsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:79"
          },
          {
            "label": "shipInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ShipInstance)32364_storage)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:82"
          },
          {
            "label": "starterShips",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_enum(Faction)27872,t_bytes32)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:85"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)9942": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_enum(Faction)27872": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Rarity)27885": {
            "label": "enum Rarity",
            "members": [
              "Common",
              "Rare",
              "Legendary",
              "Master"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)27877": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(ShipData)29412_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaShipToken.ShipData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Faction)27872,t_bytes32)": {
            "label": "mapping(enum Faction => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipInstance)32364_storage)": {
            "label": "mapping(uint256 => struct ShipInstance)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipData)29412_storage": {
            "label": "struct CryptopiaShipToken.ShipData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "generic",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "faction",
                "type": "t_enum(Faction)27872",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)27877",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)27885",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "modules",
                "type": "t_uint8",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "co2",
                "type": "t_uint16",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "base_speed",
                "type": "t_uint16",
                "offset": 7,
                "slot": "1"
              },
              {
                "label": "base_attack",
                "type": "t_uint16",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "base_health",
                "type": "t_uint16",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "base_defence",
                "type": "t_uint16",
                "offset": 13,
                "slot": "1"
              },
              {
                "label": "base_inventory",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "base_fuelConsumption",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pirateVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ShipInstance)32364_storage": {
            "label": "struct ShipInstance",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "skin",
                "type": "t_uint16",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "speed",
                "type": "t_uint16",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint16",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "health",
                "type": "t_uint16",
                "offset": 7,
                "slot": "1"
              },
              {
                "label": "damage",
                "type": "t_uint16",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "defence",
                "type": "t_uint16",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "inventory",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fuelConsumption",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2c8afb94ea8f5d9d769cd0486f1e30672fab99723618c0d1f45527be14d5e076": {
      "address": "0x75Ad32c6dC639145e3D849100616E0c5D624dbc7",
      "txHash": "0x61d2be86cd4fca8786cb2f1aed6293d8e160594424d5fecad12357dc44ef28ed",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "recipes",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(CraftingRecipeData)11062_storage))",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:77"
          },
          {
            "label": "recipesIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:78"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(CraftingPlayerData)11085_storage)",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:81"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(CraftingRecipeData)11062_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct CryptopiaCrafting.CraftingRecipeData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CraftingPlayerData)11085_storage)": {
            "label": "mapping(address => struct CryptopiaCrafting.CraftingPlayerData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CraftingRecipeData)11062_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaCrafting.CraftingRecipeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CraftingSlot)12523_storage)": {
            "label": "mapping(uint256 => struct CraftingSlot)",
            "numberOfBytes": "32"
          },
          "t_struct(CraftingPlayerData)11085_storage": {
            "label": "struct CryptopiaCrafting.CraftingPlayerData",
            "members": [
              {
                "label": "slotCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slots",
                "type": "t_mapping(t_uint256,t_struct(CraftingSlot)12523_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "learned",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "learnedIndex",
                "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CraftingRecipeData)11062_storage": {
            "label": "struct CryptopiaCrafting.CraftingRecipeData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "learnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "craftingTime",
                "type": "t_uint64",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "ingredients",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "ingredientsIndex",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CraftingSlot)12523_storage": {
            "label": "struct CraftingSlot",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "recipe",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "finished",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2e6ac9e52ada7dc9f3043df1bf642995a652db80516ef3668a984db87acfb6cd": {
      "address": "0xA91925cE9135C65c4d016FFc6e4381a8D24A101b",
      "txHash": "0x1ac8f059972312585278fa27fd75cdc6644f3fccadf2611183d37d249f5ca208",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "accountRegisterContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:68"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:69"
          },
          {
            "label": "craftingContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:70"
          },
          {
            "label": "shipTokenContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:71"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:72"
          },
          {
            "label": "totalPlayerCount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:75"
          },
          {
            "label": "totalPlayerProgression",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:76"
          },
          {
            "label": "playerDatas",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(PlayerData)25006_storage)",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_enum(Faction)27872": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)27877": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_int16": {
            "label": "int16",
            "numberOfBytes": "2"
          },
          "t_mapping(t_address,t_struct(PlayerData)25006_storage)": {
            "label": "mapping(address => struct PlayerData)",
            "numberOfBytes": "32"
          },
          "t_struct(PlayerData)25006_storage": {
            "label": "struct PlayerData",
            "members": [
              {
                "label": "faction",
                "type": "t_enum(Faction)27872",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)27877",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "karma",
                "type": "t_int16",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "xp",
                "type": "t_uint24",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "luck",
                "type": "t_uint24",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "charisma",
                "type": "t_uint24",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "intelligence",
                "type": "t_uint24",
                "offset": 14,
                "slot": "0"
              },
              {
                "label": "strength",
                "type": "t_uint24",
                "offset": 17,
                "slot": "0"
              },
              {
                "label": "speed",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "ship",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "128e86cfc901544569db276dbdfe37d5cee752e8a9e3ddb9e60e8c5add92a8c4": {
      "address": "0x6E50f12D3B7852fAAA8e3a0E3e63b7fCb9714c5e",
      "txHash": "0x4d6e6b7c8cf56e2d5bf7c154813af2cc42fb191d92b98f3d12486b10f8de1602",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)4842",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:74"
          },
          {
            "label": "tools",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(ToolData)6065_storage)",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:78"
          },
          {
            "label": "toolsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:79"
          },
          {
            "label": "toolInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ToolInstanceData)6073_storage)",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:83"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:86"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_enum(Resource)4862)dyn_storage": {
            "label": "enum Resource[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)4842": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)5668": {
            "label": "enum Rarity",
            "members": [
              "Common",
              "Rare",
              "Legendary",
              "Master"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Resource)4862": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(ToolData)6065_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaToolToken.ToolData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)4862,t_uint256)": {
            "label": "mapping(enum Resource => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ToolInstanceData)6073_storage)": {
            "label": "mapping(uint256 => struct CryptopiaToolToken.ToolInstanceData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ToolData)6065_storage": {
            "label": "struct CryptopiaToolToken.ToolData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)5668",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "durability",
                "type": "t_uint24",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "multiplier_xp",
                "type": "t_uint24",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "multiplier_effectiveness",
                "type": "t_uint24",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "value1",
                "type": "t_uint24",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "value2",
                "type": "t_uint24",
                "offset": 14,
                "slot": "1"
              },
              {
                "label": "value3",
                "type": "t_uint24",
                "offset": 17,
                "slot": "1"
              },
              {
                "label": "minting",
                "type": "t_mapping(t_enum(Resource)4862,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mintingIndex",
                "type": "t_array(t_enum(Resource)4862)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ToolInstanceData)6073_storage": {
            "label": "struct CryptopiaToolToken.ToolInstanceData",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "damage",
                "type": "t_uint24",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "6c514454f33356373f2ece0d1e841845ed3cc81bb9c35ef4996026dbbcfdbd5e": {
      "address": "0x44Fe90b0a6700A0e47E75f509DD6378Ed54D1859",
      "txHash": "0xfd282fa9ed4db55b22567b80a94ba8558089d6be1b84354814afc5d583b93120",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9942",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "maxTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaTitleDeedToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\deeds\\CryptopiaTitleDeedToken.sol:16"
          }
        ],
        "types": {
          "t_contract(IAuthenticator)9942": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5b4cc39ce55ee3b9d0109e822e582dde4a32e10f3bd59d8370fc45b1449122a8": {
      "address": "0xC05cc11EF785bb3C00FefDE3004B068174860a2F",
      "txHash": "0x99a988fb2d133e1ff590a19d1aa5e0f5eb06b84ff4b2ec5a7001e6cb7b3d9933",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:230"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:231"
          },
          {
            "label": "titleDeedContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:232"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:233"
          },
          {
            "label": "maps",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(Map)20138_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:236"
          },
          {
            "label": "mapsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:237"
          },
          {
            "label": "tileDataStatic",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint16,t_struct(TileStaticData)16504_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:240"
          },
          {
            "label": "tileDataDynamic",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint16,t_struct(TileDynamicData)16527_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:241"
          },
          {
            "label": "initializedTileCount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:242"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(PlayerNavigationData)16550_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:245"
          },
          {
            "label": "pathCache",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:248"
          },
          {
            "label": "movementPenaltyCache",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint16,t_struct(TileMovementPenaltyCacheKey)16558_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:251"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_enum(Resource)10817)dyn_storage": {
            "label": "enum Resource[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_bytes8": {
            "label": "bytes8",
            "numberOfBytes": "8"
          },
          "t_enum(Biome)20281": {
            "label": "enum Biome",
            "members": [
              "None",
              "Plains",
              "Grassland",
              "Forest",
              "RainForest",
              "Mangrove",
              "Desert",
              "Tundra",
              "Swamp",
              "Reef",
              "Vulcanic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Resource)10817": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Terrain)20268": {
            "label": "enum Terrain",
            "members": [
              "Flat",
              "Hills",
              "Mountains",
              "Water",
              "Seastead"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(PlayerNavigationData)16550_storage)": {
            "label": "mapping(address => struct CryptopiaMaps.PlayerNavigationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Map)20138_storage)": {
            "label": "mapping(bytes32 => struct Map)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)10817,t_uint256)": {
            "label": "mapping(enum Resource => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(TileDynamicData)16527_storage)": {
            "label": "mapping(uint16 => struct CryptopiaMaps.TileDynamicData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(TileMovementPenaltyCacheKey)16558_storage)": {
            "label": "mapping(uint16 => struct CryptopiaMaps.TileMovementPenaltyCacheKey)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(TileStaticData)16504_storage)": {
            "label": "mapping(uint16 => struct CryptopiaMaps.TileStaticData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Map)20138_storage": {
            "label": "struct Map",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "finalized",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sizeX",
                "type": "t_uint16",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "sizeZ",
                "type": "t_uint16",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "tileStartIndex",
                "type": "t_uint16",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PlayerNavigationData)16550_storage": {
            "label": "struct CryptopiaMaps.PlayerNavigationData",
            "members": [
              {
                "label": "chain_next",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chain_prev",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "movement",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 22,
                "slot": "1"
              },
              {
                "label": "location_tileIndex",
                "type": "t_uint16",
                "offset": 30,
                "slot": "1"
              },
              {
                "label": "location_arrival",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "location_route",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(TileDynamicData)16527_storage": {
            "label": "struct CryptopiaMaps.TileDynamicData",
            "members": [
              {
                "label": "hasRoad",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rockData",
                "type": "t_bytes4",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "vegetationData",
                "type": "t_bytes8",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "wildlifeData",
                "type": "t_bytes4",
                "offset": 13,
                "slot": "0"
              },
              {
                "label": "lastEnteredPlayer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resources",
                "type": "t_mapping(t_enum(Resource)10817,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(TileMovementPenaltyCacheKey)16558_storage": {
            "label": "struct CryptopiaMaps.TileMovementPenaltyCacheKey",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "penalty",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TileStaticData)16504_storage": {
            "label": "struct CryptopiaMaps.TileStaticData",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mapIndex",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "group",
                "type": "t_uint16",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "safety",
                "type": "t_uint8",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "biome",
                "type": "t_enum(Biome)20281",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "terrain",
                "type": "t_enum(Terrain)20268",
                "offset": 7,
                "slot": "0"
              },
              {
                "label": "elevationLevel",
                "type": "t_uint8",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "waterLevel",
                "type": "t_uint8",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "hasLake",
                "type": "t_bool",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "riverFlags",
                "type": "t_uint8",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "resources",
                "type": "t_mapping(t_enum(Resource)10817,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resourcesIndex",
                "type": "t_array(t_enum(Resource)10817)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "19815538aea2d00cdbc8fe5a91d9c876f0c14fb1bf1667abc2c4621c8c515d77": {
      "address": "0x5249E067535E3Ecd9C654d85DE70c266999De770",
      "txHash": "0x954ecf46ae495ee534f3d06096e5f019fa4d45e1d1ce9aa64192dd8daf7e06ce",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaMapsExtensions",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMapsExtensions.sol:18"
          },
          {
            "label": "titleDeedContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaMapsExtensions",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMapsExtensions.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "35f5a547f13ca68e07b6a2bf61b49539f9cb5fe10b272c0247dbdce5bf4814f6": {
      "address": "0xA512C1476dcB44E34509ecaaa082a2F2d989852f",
      "txHash": "0x4b52a7d07aae976d570b09e99cd1c000145e1f9bd8e60e0e3be0ab1e32a46101",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9942",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:30"
          },
          {
            "label": "items",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(QuestItemData)28870_storage)",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:33"
          },
          {
            "label": "itemsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:34"
          },
          {
            "label": "itemInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:37"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)9942": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(QuestItemData)28870_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuestToken.QuestItemData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(QuestItemData)28870_storage": {
            "label": "struct CryptopiaQuestToken.QuestItemData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2ad806511a5098a21e1583ce17accd064e5f8c85ffc539999a2b143d6a86f31d": {
      "address": "0xBF42Ad99dF951495fa1a73F35E0f3AF529e1AC7a",
      "txHash": "0x649bdc3a17447dfbf2bf02abc3ebb5653fb01533080056c14320a7e7fe254701",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "quests",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(QuestData)25125_storage)",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:121"
          },
          {
            "label": "questsIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:122"
          },
          {
            "label": "playerQuestData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(QuestPlayerData)25145_storage))",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:125"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:128"
          },
          {
            "label": "intentoriesContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:129"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FungibleTransactionData)16254_storage)dyn_storage": {
            "label": "struct FungibleTransactionData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NonFungibleTransactionData)16265_storage)dyn_storage": {
            "label": "struct NonFungibleTransactionData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(QuestReward)27864_storage)dyn_storage": {
            "label": "struct QuestReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(QuestStep)27843_storage)dyn_storage": {
            "label": "struct QuestStep[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes8": {
            "label": "bytes8",
            "numberOfBytes": "8"
          },
          "t_enum(Faction)27872": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)27877": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_int16": {
            "label": "int16",
            "numberOfBytes": "2"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(QuestPlayerData)25145_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct CryptopiaQuests.QuestPlayerData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(QuestData)25125_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuests.QuestData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(QuestPlayerData)25145_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuests.QuestPlayerData)",
            "numberOfBytes": "32"
          },
          "t_struct(FungibleTransactionData)16254_storage": {
            "label": "struct FungibleTransactionData",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowWallet",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(NonFungibleTransactionData)16265_storage": {
            "label": "struct NonFungibleTransactionData",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "item",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowWallet",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(QuestData)25125_storage": {
            "label": "struct CryptopiaQuests.QuestData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hasLevelConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "hasFactionConstraint",
                "type": "t_bool",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "faction",
                "type": "t_enum(Faction)27872",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "hasSubFactionConstraint",
                "type": "t_bool",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)27877",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "hasRecurrenceConstraint",
                "type": "t_bool",
                "offset": 6,
                "slot": "1"
              },
              {
                "label": "maxRecurrences",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasCooldownConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "hasTimeConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "steps",
                "type": "t_array(t_struct(QuestStep)27843_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "rewards",
                "type": "t_array(t_struct(QuestReward)27864_storage)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(QuestPlayerData)25145_storage": {
            "label": "struct CryptopiaQuests.QuestPlayerData",
            "members": [
              {
                "label": "completedCount",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stepsCompletedCount",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stepsCompleted",
                "type": "t_bytes8",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "timestampStarted",
                "type": "t_uint64",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "timestampCompleted",
                "type": "t_uint64",
                "offset": 19,
                "slot": "0"
              },
              {
                "label": "timestampClaimed",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(QuestReward)27864_storage": {
            "label": "struct QuestReward",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "karma",
                "type": "t_int16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "xp",
                "type": "t_uint24",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "fungible",
                "type": "t_array(t_struct(FungibleTransactionData)16254_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16265_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(QuestStep)27843_storage": {
            "label": "struct QuestStep",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hasTileConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tile",
                "type": "t_uint16",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "takeFungible",
                "type": "t_array(t_struct(FungibleTransactionData)16254_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "takeNonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16265_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "giveFungible",
                "type": "t_array(t_struct(FungibleTransactionData)16254_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "giveNonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16265_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "d29da471116cbab938e854ee0b42936ad0474da8d8eb172ee959df4413ae4e44": {
      "address": "0x4f9ebf3A2655126F264C873fd2C8Ed1fa7B770eC",
      "txHash": "0xed623a9ede396b1c280ea7f9f1bd15828404878ced6f6e35c2a76a2fd64dfb83",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mapContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:31"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:32"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:33"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:34"
          },
          {
            "label": "toolTokenContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5272c8a0c84c835c2671d6ad599339f8460a57e059276487a9f118305a26c805": {
      "address": "0x8e45EEf0c25fB1ebcfc481baA3668Fc096661006",
      "txHash": "0xd3ded204b2c119d382b96a5d8c1f7ee48676e3d96b152dde000b0da35e607215",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaAssetToken",
            "src": "contracts\\source\\tokens\\ERC20\\concrete\\assets\\CryptopiaAssetToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3b05a338811023bab8a3bb52df0f3487674b293408be68ac7d35d828e7951933": {
      "address": "0x34bee76728F68eB06C05d548f940BE7F923c45c4",
      "txHash": "0x1dc5420658810084691c4224efc0f8fbabd83f0ea857862364e991cf862bafc1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentRandomSeed",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "PseudoRandomness",
            "src": "contracts\\source\\game\\utils\\random\\PseudoRandomness.sol:24"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:45"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:46"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5f4f21b7d3703984faff41fa0cf785b77bb6e2da5f9cf90f24a687c2e34db939": {
      "address": "0xD07BEfF1de10c06ab02c9085a38CE98089581Da3",
      "txHash": "0xa73936c8f1a75580df1d71ef8e47ac713765f4f7c265ee8bb31921f1082bc531",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentRandomSeed",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "PseudoRandomness",
            "src": "contracts\\source\\game\\utils\\random\\PseudoRandomness.sol:24"
          },
          {
            "label": "targets",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_address)",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:69"
          },
          {
            "label": "confrontations",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Confrontation)22768_storage)",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:72"
          },
          {
            "label": "plunders",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Plunder)22779_storage))",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:75"
          },
          {
            "label": "navalBattleMechanicsContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:78"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:79"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:80"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:81"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:82"
          },
          {
            "label": "fuelContact",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:83"
          },
          {
            "label": "intentoriesContract",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Plunder)22779_storage))": {
            "label": "mapping(address => mapping(address => struct Plunder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Confrontation)22768_storage)": {
            "label": "mapping(address => struct Confrontation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Plunder)22779_storage)": {
            "label": "mapping(address => struct Plunder)",
            "numberOfBytes": "32"
          },
          "t_struct(Confrontation)22768_storage": {
            "label": "struct Confrontation",
            "members": [
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "location",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "arrival",
                "type": "t_uint64",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expiration",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "escapeAttempted",
                "type": "t_bool",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Plunder)22779_storage": {
            "label": "struct Plunder",
            "members": [
              {
                "label": "deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loot_hot",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "loot_hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
