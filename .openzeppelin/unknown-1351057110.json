{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x86dFc7e4974e2E249fcB36e1108d2a367BdABC9b",
    "txHash": "0xda87ab56484a60d67aee264631f4e1c4943fd37cc384088ff1cbdba2da005fc4"
  },
  "proxies": [
    {
      "address": "0x8700AAb7fCfCEF6EC9747b743f28396446F4c2aF",
      "txHash": "0x5f39f32042f5494100ec9811933c61718f736c26ecd9fcf6df7daa69c187d3b0",
      "kind": "transparent"
    },
    {
      "address": "0x6A2df5D25Ea5742F489C25044D2d4f2A0772C85b",
      "txHash": "0x2fbf8a71090286ddadfb00be426047b590e09d232f10071c48094cabfd9b025c",
      "kind": "transparent"
    },
    {
      "address": "0x8c56f8804825ae2ce2c7c36B97f714Bd5a385B07",
      "txHash": "0x676b3c61dfc081a94ea9e6f909d0ef95bb33edb85a48b9d157ee9093aa105669",
      "kind": "transparent"
    },
    {
      "address": "0xcA7F3BA7a188E94436E0370E82c646D6C31e4ED6",
      "txHash": "0xbbd31baa41bda815311b534f4426505378d865a2783bfc9ab02af6af8af79a40",
      "kind": "transparent"
    },
    {
      "address": "0x5174664DFCCf5CFA682D81013637Ca99BC3A23FB",
      "txHash": "0x9a667db63ca4ed472496acc404b79fff231b6673fa08dcfb3362b927f63288f1",
      "kind": "transparent"
    },
    {
      "address": "0x449fBd2340458BeEEa952201cb99333085029154",
      "txHash": "0xbd5fc58fa1f9d14b450c75828e05c4b3ec348ae9b8c5926ba956151c0bb041eb",
      "kind": "transparent"
    },
    {
      "address": "0x616EfA9606D4Fa3019567De7E6934833f21193a7",
      "txHash": "0x222738078981988f9690986b48f4f9b58f8ac4d71a0ee1c5dde244cc177a8ffd",
      "kind": "transparent"
    },
    {
      "address": "0x012E3852c4547E35Ba7F35dC37C5FCA40a638a33",
      "txHash": "0x8cdef51c5d2c6fe8f508bbd2bdc231f722e48a4c434c355b08a96b4a59bad96d",
      "kind": "transparent"
    },
    {
      "address": "0x18f3AebaF4d1533A3FfeD9e35276975C51CFcA30",
      "txHash": "0x5b6f038280cb957f3530d83d5eb9cab375a45222b3db0863f3e99628f26df7f3",
      "kind": "transparent"
    },
    {
      "address": "0x0DAfdb307939e647Cb4D00404C88d1A0c1DB6A0c",
      "txHash": "0x4274a09cad699e01854d54c6d911cbe47bd3b618e6fe38d8a420dfc670d63b20",
      "kind": "transparent"
    },
    {
      "address": "0x16bdc31E288494D17d6FE56E99EAe1ea35FF9780",
      "txHash": "0x029c7242586e9e1a956b061db55e315f4b1a629813c2bb550ed671a33d2ca40b",
      "kind": "transparent"
    },
    {
      "address": "0xE3Fa217E1004B4a4e61059F4b0Ef4Cdc9DbBdF35",
      "txHash": "0x7e2f3aacf8623b615f97ad9d40af831010e17f402896d46f2205511f8440414f",
      "kind": "transparent"
    },
    {
      "address": "0xb07b91645b568F5Cf6403Ab5873DB8ccB53AcE38",
      "txHash": "0x223335ea22f2f9e8626da50de2430e7a1b8a45cbf88da18c0aa6ab9df062f64e",
      "kind": "transparent"
    },
    {
      "address": "0xc76E847550b7fbfff7cee75FbC99ED90f99fCc21",
      "txHash": "0x58b47d9324c9f2b6f06c012d9e7115c867b61ed21556a75542b9cba82156cd5b",
      "kind": "transparent"
    },
    {
      "address": "0x3bDCd4588E18aBEff14b1be19Ce8b895DdCAaD18",
      "txHash": "0x7003fd1c01dcf4eadbaf3d9ee436301ae78da945fa3d0198120cfc925253708b",
      "kind": "transparent"
    },
    {
      "address": "0x0a090d14ae1C8dc23d8BA39d318c59473ad5fF4C",
      "txHash": "0x6f3ac1a093ee46550b4028622e8a8fbcc1047b233be77d85192b8fe1472e5b24",
      "kind": "transparent"
    },
    {
      "address": "0x21a8547994969B21eAc3A17928057f195F1B50F6",
      "txHash": "0xc31a1639bd7b00c4ae4a1e00a13e52bd0286a1a54924eb2dc124dbae4f32d2aa",
      "kind": "transparent"
    },
    {
      "address": "0xCA777e8A3a9DeAc6B1143343359a04c3D6e1B4A2",
      "txHash": "0xabb7c0f1305b2097f8a5d126cccd311b3b27fe47d0740859d608d4aef7286a0b",
      "kind": "transparent"
    },
    {
      "address": "0xF240E89f1E6E26978aC87bAD21F4819b8B0c17fC",
      "txHash": "0x483201f246958aaacb8b0a3dda4a93cc5f370645cbbd7ce255a069ad8e58c704",
      "kind": "transparent"
    },
    {
      "address": "0x7ee39f8169f2eB2c053377068d765654A924CB42",
      "txHash": "0xf99cddad8ed7813a816d174010863a2e841acf50ae12ab4d319d1440554b076c",
      "kind": "transparent"
    },
    {
      "address": "0xF196821Da3fA0B8A70446D1C9cA8AE247382415A",
      "txHash": "0xbb5a61174f38d13f4bb604c150ba69e84f6d547092a2fbff11b8d5caa5676a93",
      "kind": "transparent"
    },
    {
      "address": "0x5ca8BB8eBC09D3FEAf203031Ae3ac754D48af941",
      "txHash": "0x40c8a4d07517a7dee52409ce3e9355d48a66f85351de142f8dd5bbb598594322",
      "kind": "transparent"
    },
    {
      "address": "0x075cEd4cd56D5A0753296bFc704403099Cc5C2a6",
      "txHash": "0xbc4cbf00d922bf846991ab3197dd5cdb7720e1d17b076af754620a3a7807dfb8",
      "kind": "transparent"
    },
    {
      "address": "0x7bD290174d308Dd39E74A25fd4253BF79A02C88b",
      "txHash": "0x06f800efa4e409bc81bbc6b7af26fe8b35b1dae7b87c6d6a8d509ba75cd8818c",
      "kind": "transparent"
    },
    {
      "address": "0x922fF53Afd3fe325d2f9c8968c69b13E1BF33763",
      "txHash": "0x651a26fedce685d04f22b9beea8b00eaeb0177ace9840122938e96f3b55e89cf",
      "kind": "transparent"
    },
    {
      "address": "0xEFAD08909271bF7a2cdcA6861B61999962c652d3",
      "txHash": "0xce0ee026ba85a53b35b8105b194bcacdf1d6ee2c52c701e129c868695d1830bb",
      "kind": "transparent"
    },
    {
      "address": "0x1f240D827282c7f89Fd1cC75Aa0061bbe8100d9d",
      "txHash": "0x491298b659f13f06d46c18e9f6edf3adac0b50453e1d0c200167165f67597110",
      "kind": "transparent"
    },
    {
      "address": "0x1bfe84D8Cd15e8DEcC8D43a86Fa0b1d9CB07a3eF",
      "txHash": "0x44373562dc8e31d67a78724985a9dae6c1823a9bc17ccb48a018bbe763577da5",
      "kind": "transparent"
    },
    {
      "address": "0x7A58ED0c588f26e8F67b463511fCfed915B35F52",
      "txHash": "0x57c4ff6dad36009f2478df2ed4d0909f5eca787259ff76c4abfce0e29ce7ba84",
      "kind": "transparent"
    },
    {
      "address": "0xC3b73c1d28b1d83186236Ca83770e3deDed61532",
      "txHash": "0x64bdd908d0869e98ca1a9ccb07a4894823b441112cfff79f0de07021d0442506",
      "kind": "transparent"
    },
    {
      "address": "0x6828Df309584B891433a66bF65675FbEe1c94d39",
      "txHash": "0x3267991acd6ee5c642328066572e8aa011bf16c17b5b3e4186c667c33e8d7dd7",
      "kind": "transparent"
    },
    {
      "address": "0x54248797602C3a60494a57644F4836BF432d7a66",
      "txHash": "0x35c15ed4d7b95c4f2f4a5505697e74e20d73c7adb0667838357ed20fee331ede",
      "kind": "transparent"
    },
    {
      "address": "0x2F8Ab4D22e4ac953330E544538FdB906A21F78Ce",
      "txHash": "0x2928890c5f4198f3720ac9ea88fdf26d48287dd3042c2e55715b1578a622c244",
      "kind": "transparent"
    },
    {
      "address": "0x117CB4C52098454375e3B624D10eBEDb664F99dD",
      "txHash": "0xf48b3478401f8aa1356c4ba02c79b2cfc6c04bf35260ff98cea960e357b8a03f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c07aa870fa12a0d634ef22b50878e414340448e56e184fdae62b1f43c3af54f4": {
      "address": "0xDEC61c699cDAAeB0965cDFA727f01c71341e8dCb",
      "txHash": "0xf3683d729d965e2da4b5fe5637dc911c318e683fb85153ff491df1daad0b907f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "fungible",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(Asset)12928_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:93"
          },
          {
            "label": "fungibleIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:94"
          },
          {
            "label": "nonFungible",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Asset)12928_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:97"
          },
          {
            "label": "nonFungibleIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:98"
          },
          {
            "label": "playerToShip",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:101"
          },
          {
            "label": "nonFungibleTokenDatas",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NonFungibleTokenData)12966_storage))",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:104"
          },
          {
            "label": "shipInventories",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(InventorySpaceData)12947_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:107"
          },
          {
            "label": "playerInventories",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_struct(InventorySpaceData)12947_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:110"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(PlayerInventoryData)12971_storage)",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:113"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CryptopiaInventories",
            "src": "contracts\\source\\game\\inventories\\concrete\\CryptopiaInventories.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(Inventory)16142": {
            "label": "enum Inventory",
            "members": [
              "Wallet",
              "Backpack",
              "Ship"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NonFungibleTokenData)12966_storage))": {
            "label": "mapping(address => mapping(uint256 => struct CryptopiaInventories.NonFungibleTokenData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Asset)12928_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.Asset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(InventorySpaceData)12947_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.InventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(NonFungibleTokenInventorySpaceData)12957_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.NonFungibleTokenInventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PlayerInventoryData)12971_storage)": {
            "label": "mapping(address => struct CryptopiaInventories.PlayerInventoryData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(InventorySpaceData)12947_storage)": {
            "label": "mapping(uint256 => struct CryptopiaInventories.InventorySpaceData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NonFungibleTokenData)12966_storage)": {
            "label": "mapping(uint256 => struct CryptopiaInventories.NonFungibleTokenData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)12928_storage": {
            "label": "struct CryptopiaInventories.Asset",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InventorySpaceData)12947_storage": {
            "label": "struct CryptopiaInventories.InventorySpaceData",
            "members": [
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fungible",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nonFungible",
                "type": "t_mapping(t_address,t_struct(NonFungibleTokenInventorySpaceData)12957_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(NonFungibleTokenData)12966_storage": {
            "label": "struct CryptopiaInventories.NonFungibleTokenData",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inventory",
                "type": "t_enum(Inventory)16142",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NonFungibleTokenInventorySpaceData)12957_storage": {
            "label": "struct CryptopiaInventories.NonFungibleTokenInventorySpaceData",
            "members": [
              {
                "label": "tokens",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensIndex",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PlayerInventoryData)12971_storage": {
            "label": "struct CryptopiaInventories.PlayerInventoryData",
            "members": [
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3edfde00eb6b6429e4d51e13fc3747d0d25ec9f9dd8c4045881cff332838aa54": {
      "address": "0x6953321aE95a58489cF0ACe25325FA48851947f4",
      "txHash": "0xe3b7a8e906c1532ef300dd2eeb301c3444474b8c2603301fab8af098155805fc",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "list",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Whitelist",
            "src": "contracts\\source\\authentication\\whitelist\\Whitelist.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "b53930ae59e52795390c63b9736400ccd9547ceaee3be9a62e4154ef98e99d3c": {
      "address": "0x8C40E0A0bC9aBDA1b7943602C784ba770782eE4F",
      "txHash": "0x61cc45512099267e1dd0963ff022ea7bbfadffa0afcb74c20c2c04cb61a6ba14",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "60af034aaee14bb71448b793c62658b04b805607b8ccd30bc1fdd559d850da75": {
      "address": "0x43f642B37fEE6b31A058cBe8236Ffad7f2923D50",
      "txHash": "0xc86fc89bb41234aa01e34828adb72835b36fd7b3a16684cf6cea02ae82fe603f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "usernameToAccount",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "CryptopiaAccountRegister",
            "src": "contracts\\source\\accounts\\concrete\\CryptopiaAccountRegister.sol:36"
          },
          {
            "label": "accountDatas",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(AccountData)7024_storage)",
            "contract": "CryptopiaAccountRegister",
            "src": "contracts\\source\\accounts\\concrete\\CryptopiaAccountRegister.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Relationship)9932": {
            "label": "enum Relationship",
            "members": [
              "None",
              "Friend",
              "Family",
              "Spouse"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Sex)9926": {
            "label": "enum Sex",
            "members": [
              "Undefined",
              "Male",
              "Female"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_enum(Relationship)9932)": {
            "label": "mapping(address => enum Relationship)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccountData)7024_storage)": {
            "label": "mapping(address => struct CryptopiaAccountRegister.AccountData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(AccountData)7024_storage": {
            "label": "struct CryptopiaAccountRegister.AccountData",
            "members": [
              {
                "label": "username",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sex",
                "type": "t_enum(Sex)9926",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "friends",
                "type": "t_mapping(t_address,t_enum(Relationship)9932)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "friendsIndex",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "friendRequests",
                "type": "t_mapping(t_address,t_enum(Relationship)9932)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {}
      }
    },
    "4b302d008d21166ae99d2ccc44c61ecba31f6ff479d17b8ef015eba604da9950": {
      "address": "0x66b35e1f0F186504c650754c031fD6fD5D762Ddf",
      "txHash": "0x6d963cb42be1c76be1870dfd634897b518a9a80c9b7a16850780cc2f6fef0ef0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "assets",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:22"
          },
          {
            "label": "assetsIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:23"
          },
          {
            "label": "resources",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(Resource)10819,t_address)",
            "contract": "CryptopiaAssetRegister",
            "src": "contracts\\source\\game\\assets\\concrete\\CryptopiaAssetRegister.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Resource)10819": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)10819,t_address)": {
            "label": "mapping(enum Resource => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "93c99f3d1dad5f3c08467708aafe13ffd6ebf7bc78cd4d5400a61c10768b6668": {
      "address": "0xD0A8fE2f2413d5741487Ce652eE729c0344F1A1B",
      "txHash": "0x73edf11df7eccf8a0ad4deeb62707562750d75bdf854e19c47538856b1603912",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9944",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:75"
          },
          {
            "label": "ships",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(ShipData)28530_storage)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:78"
          },
          {
            "label": "shipsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:79"
          },
          {
            "label": "shipInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ShipInstance)31379_storage)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:82"
          },
          {
            "label": "starterShips",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_enum(Faction)26990,t_bytes32)",
            "contract": "CryptopiaShipToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\ships\\CryptopiaShipToken.sol:85"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)9944": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_enum(Faction)26990": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Rarity)27003": {
            "label": "enum Rarity",
            "members": [
              "Common",
              "Rare",
              "Legendary",
              "Master"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)26995": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(ShipData)28530_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaShipToken.ShipData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Faction)26990,t_bytes32)": {
            "label": "mapping(enum Faction => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ShipInstance)31379_storage)": {
            "label": "mapping(uint256 => struct ShipInstance)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ShipData)28530_storage": {
            "label": "struct CryptopiaShipToken.ShipData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "generic",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "faction",
                "type": "t_enum(Faction)26990",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)26995",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)27003",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "modules",
                "type": "t_uint8",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "co2",
                "type": "t_uint16",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "base_speed",
                "type": "t_uint16",
                "offset": 7,
                "slot": "1"
              },
              {
                "label": "base_attack",
                "type": "t_uint16",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "base_health",
                "type": "t_uint16",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "base_defence",
                "type": "t_uint16",
                "offset": 13,
                "slot": "1"
              },
              {
                "label": "base_inventory",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "base_fuelConsumption",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pirateVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ShipInstance)31379_storage": {
            "label": "struct ShipInstance",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "skin",
                "type": "t_uint16",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "speed",
                "type": "t_uint16",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "attack",
                "type": "t_uint16",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "health",
                "type": "t_uint16",
                "offset": 7,
                "slot": "1"
              },
              {
                "label": "damage",
                "type": "t_uint16",
                "offset": 9,
                "slot": "1"
              },
              {
                "label": "defence",
                "type": "t_uint16",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "inventory",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fuelConsumption",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5cf126882f783d6e892da9e5f5e003fd6e263253c6bce4feb4bb5c24957f4c81": {
      "address": "0x6e470b8bF20fa18F091372AE42B0d2fB9478206C",
      "txHash": "0xe50c0ed596618eb0c2480b24bb6364ad736fde2c08392d85ae5ce647b2402ee8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "recipes",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(CraftingRecipeData)11064_storage))",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:77"
          },
          {
            "label": "recipesIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:78"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(CraftingPlayerData)11087_storage)",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:81"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaCrafting",
            "src": "contracts\\source\\game\\crafting\\concrete\\CryptopiaCrafting.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(CraftingRecipeData)11064_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct CryptopiaCrafting.CraftingRecipeData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CraftingPlayerData)11087_storage)": {
            "label": "mapping(address => struct CryptopiaCrafting.CraftingPlayerData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CraftingRecipeData)11064_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaCrafting.CraftingRecipeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CraftingSlot)12479_storage)": {
            "label": "mapping(uint256 => struct CraftingSlot)",
            "numberOfBytes": "32"
          },
          "t_struct(CraftingPlayerData)11087_storage": {
            "label": "struct CryptopiaCrafting.CraftingPlayerData",
            "members": [
              {
                "label": "slotCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slots",
                "type": "t_mapping(t_uint256,t_struct(CraftingSlot)12479_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "learned",
                "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "learnedIndex",
                "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CraftingRecipeData)11064_storage": {
            "label": "struct CryptopiaCrafting.CraftingRecipeData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "learnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "craftingTime",
                "type": "t_uint64",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "ingredients",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "ingredientsIndex",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(CraftingSlot)12479_storage": {
            "label": "struct CraftingSlot",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "recipe",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "finished",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "1fc27064cc078cf89cc1533b5595226821dba174f6729803725ff26723f5d98a": {
      "address": "0xa958fda3b95710CeE5Fa0A544C1A67e89CaAA8d2",
      "txHash": "0x2450d16c3bb51289e28cf89b455de9786cd794a3dec6eef3de4b4c5a144e3ed9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "accountRegisterContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:67"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:68"
          },
          {
            "label": "craftingContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:69"
          },
          {
            "label": "shipTokenContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:70"
          },
          {
            "label": "totalPlayerCount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:73"
          },
          {
            "label": "totalPlayerProgression",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:74"
          },
          {
            "label": "playerDatas",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(PlayerData)24124_storage)",
            "contract": "CryptopiaPlayerRegister",
            "src": "contracts\\source\\game\\players\\concrete\\CryptopiaPlayerRegister.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_enum(Faction)26990": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)26995": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_int16": {
            "label": "int16",
            "numberOfBytes": "2"
          },
          "t_mapping(t_address,t_struct(PlayerData)24124_storage)": {
            "label": "mapping(address => struct PlayerData)",
            "numberOfBytes": "32"
          },
          "t_struct(PlayerData)24124_storage": {
            "label": "struct PlayerData",
            "members": [
              {
                "label": "faction",
                "type": "t_enum(Faction)26990",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)26995",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "karma",
                "type": "t_int16",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "xp",
                "type": "t_uint24",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "luck",
                "type": "t_uint24",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "charisma",
                "type": "t_uint24",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "intelligence",
                "type": "t_uint24",
                "offset": 14,
                "slot": "0"
              },
              {
                "label": "strength",
                "type": "t_uint24",
                "offset": 17,
                "slot": "0"
              },
              {
                "label": "speed",
                "type": "t_uint24",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "ship",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "8aef918383a389aa0b23f3968240bf109e79fbc3ba6def3efbb47d247269a964": {
      "address": "0x095D318C64097a75cE6361A808239C9BDFf19669",
      "txHash": "0x1c0adcc2a514e376293a22b3a132efcef983109d9d8e9f8042a623be39cbb114",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9944",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:65"
          },
          {
            "label": "tools",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(ToolData)30091_storage)",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:69"
          },
          {
            "label": "toolsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:70"
          },
          {
            "label": "toolInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(ToolInstance)31561_storage)",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:74"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:77"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "CryptopiaToolToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\tools\\CryptopiaToolToken.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_enum(Resource)10819)dyn_storage": {
            "label": "enum Resource[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)9944": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)27003": {
            "label": "enum Rarity",
            "members": [
              "Common",
              "Rare",
              "Legendary",
              "Master"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Resource)10819": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(ToolData)30091_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaToolToken.ToolData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)10819,t_uint256)": {
            "label": "mapping(enum Resource => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ToolInstance)31561_storage)": {
            "label": "mapping(uint256 => struct ToolInstance)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ToolData)30091_storage": {
            "label": "struct CryptopiaToolToken.ToolData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)27003",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "durability",
                "type": "t_uint24",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "multiplier_cooldown",
                "type": "t_uint24",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "multiplier_xp",
                "type": "t_uint24",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "multiplier_effectiveness",
                "type": "t_uint24",
                "offset": 11,
                "slot": "1"
              },
              {
                "label": "value1",
                "type": "t_uint24",
                "offset": 14,
                "slot": "1"
              },
              {
                "label": "value2",
                "type": "t_uint24",
                "offset": 17,
                "slot": "1"
              },
              {
                "label": "value3",
                "type": "t_uint24",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "minting",
                "type": "t_mapping(t_enum(Resource)10819,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mintingIndex",
                "type": "t_array(t_enum(Resource)10819)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ToolInstance)31561_storage": {
            "label": "struct ToolInstance",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "damage",
                "type": "t_uint24",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "6c514454f33356373f2ece0d1e841845ed3cc81bb9c35ef4996026dbbcfdbd5e": {
      "address": "0xB34E651D19b0481C3bA6D113D30Ea8b61A129F0a",
      "txHash": "0xd4ba57fe6515ec0e6032034fd6f1967838240643877cea59b200acb04f52ff54",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9944",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "maxTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaTitleDeedToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\deeds\\CryptopiaTitleDeedToken.sol:16"
          }
        ],
        "types": {
          "t_contract(IAuthenticator)9944": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c619c3a4f9de4d72b18a7950e1d8ae87affe68a309970aeb45d2970c58445ed7": {
      "address": "0x3c506871AB82229C6889C91A3Cdb0A61281ec338",
      "txHash": "0x362dee7c4efd62fb7e271d80633a13ea2b5b7559e1c9e41dfc7fc9026552f1ab",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:124"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:125"
          },
          {
            "label": "titleDeedContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:126"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:127"
          },
          {
            "label": "maps",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(Map)3998_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:130"
          },
          {
            "label": "mapsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:131"
          },
          {
            "label": "tileDataStatic",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint16,t_struct(TileStaticData)1144_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:134"
          },
          {
            "label": "tileDataDynamic",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint16,t_struct(TileDynamicData)1155_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:135"
          },
          {
            "label": "initializedTileCount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:136"
          },
          {
            "label": "playerData",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(PlayerNavigationData)4104_storage)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:139"
          },
          {
            "label": "pathCache",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint32,t_uint256)",
            "contract": "CryptopiaMaps",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMaps.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_enum(Resource)957)dyn_storage": {
            "label": "enum Resource[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_bytes8": {
            "label": "bytes8",
            "numberOfBytes": "8"
          },
          "t_enum(Biome)4131": {
            "label": "enum Biome",
            "members": [
              "None",
              "Plains",
              "Grassland",
              "Forest",
              "RainForest",
              "Mangrove",
              "Desert",
              "Tundra",
              "Swamp",
              "Reef",
              "Vulcanic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Resource)957": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Terrain)4118": {
            "label": "enum Terrain",
            "members": [
              "Flat",
              "Hills",
              "Mountains",
              "Water",
              "Seastead"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(PlayerNavigationData)4104_storage)": {
            "label": "mapping(address => struct PlayerNavigationData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Map)3998_storage)": {
            "label": "mapping(bytes32 => struct Map)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)957,t_uint256)": {
            "label": "mapping(enum Resource => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(TileDynamicData)1155_storage)": {
            "label": "mapping(uint16 => struct CryptopiaMaps.TileDynamicData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_struct(TileStaticData)1144_storage)": {
            "label": "mapping(uint16 => struct CryptopiaMaps.TileStaticData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_uint256)": {
            "label": "mapping(uint32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Map)3998_storage": {
            "label": "struct Map",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "finalized",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "sizeX",
                "type": "t_uint16",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "sizeZ",
                "type": "t_uint16",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "tileStartIndex",
                "type": "t_uint16",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PlayerNavigationData)4104_storage": {
            "label": "struct PlayerNavigationData",
            "members": [
              {
                "label": "chain_next",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "chain_prev",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "movement",
                "type": "t_uint16",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 22,
                "slot": "1"
              },
              {
                "label": "location_tileIndex",
                "type": "t_uint16",
                "offset": 30,
                "slot": "1"
              },
              {
                "label": "location_arrival",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "location_route",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(TileDynamicData)1155_storage": {
            "label": "struct CryptopiaMaps.TileDynamicData",
            "members": [
              {
                "label": "lastEnteredPlayer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resources",
                "type": "t_mapping(t_enum(Resource)957,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TileStaticData)1144_storage": {
            "label": "struct CryptopiaMaps.TileStaticData",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mapIndex",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "group",
                "type": "t_uint16",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "safety",
                "type": "t_uint8",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "biome",
                "type": "t_enum(Biome)4131",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "terrain",
                "type": "t_enum(Terrain)4118",
                "offset": 7,
                "slot": "0"
              },
              {
                "label": "elevation",
                "type": "t_uint8",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "waterLevel",
                "type": "t_uint8",
                "offset": 9,
                "slot": "0"
              },
              {
                "label": "vegetationData",
                "type": "t_bytes8",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "rockData",
                "type": "t_bytes4",
                "offset": 18,
                "slot": "0"
              },
              {
                "label": "wildlifeData",
                "type": "t_bytes4",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "riverFlags",
                "type": "t_uint8",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "hasRoad",
                "type": "t_bool",
                "offset": 27,
                "slot": "0"
              },
              {
                "label": "hasLake",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "resources",
                "type": "t_mapping(t_enum(Resource)957,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resourcesIndex",
                "type": "t_array(t_enum(Resource)957)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "35f5a547f13ca68e07b6a2bf61b49539f9cb5fe10b272c0247dbdce5bf4814f6": {
      "address": "0x6fFDA51452648996AC54C4f1E739bE80f691dBaF",
      "txHash": "0xe2a61fd8c0b81454ec721435a8025bf9d7cef43a40a5f95841cd5903975a2e84",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:27"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:28"
          },
          {
            "label": "authenticator",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IAuthenticator)9944",
            "contract": "CryptopiaERC721",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\CryptopiaERC721.sol:31"
          },
          {
            "label": "_currentTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:30"
          },
          {
            "label": "items",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_struct(QuestItemData)27988_storage)",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:33"
          },
          {
            "label": "itemsIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:34"
          },
          {
            "label": "itemInstances",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:37"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaQuestToken",
            "src": "contracts\\source\\tokens\\ERC721\\concrete\\quests\\CryptopiaQuestToken.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAuthenticator)9944": {
            "label": "contract IAuthenticator",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(QuestItemData)27988_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuestToken.QuestItemData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(QuestItemData)27988_storage": {
            "label": "struct CryptopiaQuestToken.QuestItemData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2ad806511a5098a21e1583ce17accd064e5f8c85ffc539999a2b143d6a86f31d": {
      "address": "0x9A469a5223E8d599011a178485c21eD44089dACE",
      "txHash": "0xa50defffc156ed4d2589768e92be4c9da66992bed8b8b3d17c5c8f564125d896",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "quests",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(QuestData)24243_storage)",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:121"
          },
          {
            "label": "questsIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:122"
          },
          {
            "label": "playerQuestData",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(QuestPlayerData)24263_storage))",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:125"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:128"
          },
          {
            "label": "intentoriesContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:129"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CryptopiaQuests",
            "src": "contracts\\source\\game\\quests\\concrete\\CryptopiaQuests.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FungibleTransactionData)16125_storage)dyn_storage": {
            "label": "struct FungibleTransactionData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NonFungibleTransactionData)16136_storage)dyn_storage": {
            "label": "struct NonFungibleTransactionData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(QuestReward)26982_storage)dyn_storage": {
            "label": "struct QuestReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(QuestStep)26961_storage)dyn_storage": {
            "label": "struct QuestStep[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes8": {
            "label": "bytes8",
            "numberOfBytes": "8"
          },
          "t_enum(Faction)26990": {
            "label": "enum Faction",
            "members": [
              "Eco",
              "Tech",
              "Industrial",
              "Traditional"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(SubFaction)26995": {
            "label": "enum SubFaction",
            "members": [
              "None",
              "Pirate",
              "BountyHunter"
            ],
            "numberOfBytes": "1"
          },
          "t_int16": {
            "label": "int16",
            "numberOfBytes": "2"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(QuestPlayerData)24263_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct CryptopiaQuests.QuestPlayerData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(QuestData)24243_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuests.QuestData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(QuestPlayerData)24263_storage)": {
            "label": "mapping(bytes32 => struct CryptopiaQuests.QuestPlayerData)",
            "numberOfBytes": "32"
          },
          "t_struct(FungibleTransactionData)16125_storage": {
            "label": "struct FungibleTransactionData",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowWallet",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(NonFungibleTransactionData)16136_storage": {
            "label": "struct NonFungibleTransactionData",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "item",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowWallet",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(QuestData)24243_storage": {
            "label": "struct CryptopiaQuests.QuestData",
            "members": [
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hasLevelConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "level",
                "type": "t_uint8",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "hasFactionConstraint",
                "type": "t_bool",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "faction",
                "type": "t_enum(Faction)26990",
                "offset": 3,
                "slot": "1"
              },
              {
                "label": "hasSubFactionConstraint",
                "type": "t_bool",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "subFaction",
                "type": "t_enum(SubFaction)26995",
                "offset": 5,
                "slot": "1"
              },
              {
                "label": "hasRecurrenceConstraint",
                "type": "t_bool",
                "offset": 6,
                "slot": "1"
              },
              {
                "label": "maxRecurrences",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasCooldownConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cooldown",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "hasTimeConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "steps",
                "type": "t_array(t_struct(QuestStep)26961_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "rewards",
                "type": "t_array(t_struct(QuestReward)26982_storage)dyn_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(QuestPlayerData)24263_storage": {
            "label": "struct CryptopiaQuests.QuestPlayerData",
            "members": [
              {
                "label": "completedCount",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stepsCompletedCount",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stepsCompleted",
                "type": "t_bytes8",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "timestampStarted",
                "type": "t_uint64",
                "offset": 11,
                "slot": "0"
              },
              {
                "label": "timestampCompleted",
                "type": "t_uint64",
                "offset": 19,
                "slot": "0"
              },
              {
                "label": "timestampClaimed",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(QuestReward)26982_storage": {
            "label": "struct QuestReward",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "karma",
                "type": "t_int16",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "xp",
                "type": "t_uint24",
                "offset": 2,
                "slot": "1"
              },
              {
                "label": "fungible",
                "type": "t_array(t_struct(FungibleTransactionData)16125_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16136_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(QuestStep)26961_storage": {
            "label": "struct QuestStep",
            "members": [
              {
                "label": "name",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hasTileConstraint",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tile",
                "type": "t_uint16",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "takeFungible",
                "type": "t_array(t_struct(FungibleTransactionData)16125_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "takeNonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16136_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "giveFungible",
                "type": "t_array(t_struct(FungibleTransactionData)16125_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "giveNonFungible",
                "type": "t_array(t_struct(NonFungibleTransactionData)16136_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "178b7b278b9291f47539e5dfa16f7de360831a62520620ba5764b15e781b57bc": {
      "address": "0x8281744847164Eb74dA72A20555Fa349507E2d2E",
      "txHash": "0x3ed31572a35806ae23dadc2afb8f2a65c25587417da62e39d2fc733bb9ebfe30",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mapContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:32"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:33"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:34"
          },
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:35"
          },
          {
            "label": "toolTokenContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:36"
          },
          {
            "label": "playerCooldown",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_enum(Resource)10819,t_uint256))",
            "contract": "CryptopiaResourceGathering",
            "src": "contracts\\source\\game\\players\\concrete\\interactions\\CryptopiaResourceGathering.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_enum(Resource)10819": {
            "label": "enum Resource",
            "members": [
              "Fish",
              "Meat",
              "Fruit",
              "Wood",
              "Stone",
              "Sand",
              "Uranium",
              "Iron",
              "Diamond",
              "Copper",
              "Silver",
              "Gold",
              "Carbon",
              "Oil",
              "Glass",
              "Steel",
              "Fuel"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_enum(Resource)10819,t_uint256))": {
            "label": "mapping(address => mapping(enum Resource => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Resource)10819,t_uint256)": {
            "label": "mapping(enum Resource => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5272c8a0c84c835c2671d6ad599339f8460a57e059276487a9f118305a26c805": {
      "address": "0x72F1Ebf72886fC22985C8d55f4E042fD0D876731",
      "txHash": "0x79586c6f2495e37531b439ca2fa84e85b40452801a87e1382c66cd7fca2d9ffc",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "inventoriesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaAssetToken",
            "src": "contracts\\source\\tokens\\ERC20\\concrete\\assets\\CryptopiaAssetToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3b05a338811023bab8a3bb52df0f3487674b293408be68ac7d35d828e7951933": {
      "address": "0x93A986F1Aab26bbB7391f73eF96E9a37DF08C9D1",
      "txHash": "0x99682a8b40d0782427bc83011f2e9ec99e44603daa08601e2f65fffdd938bb97",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentRandomSeed",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "PseudoRandomness",
            "src": "contracts\\source\\game\\utils\\random\\PseudoRandomness.sol:24"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:45"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:46"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "CryptopiaNavalBattleMechanics",
            "src": "contracts\\source\\game\\mechanics\\battle\\concrete\\CryptopiaNavalBattleMechanics.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5f4f21b7d3703984faff41fa0cf785b77bb6e2da5f9cf90f24a687c2e34db939": {
      "address": "0x27BF82FAe3440B764018f49a486EDd39BfD31320",
      "txHash": "0xa94d9d547c2f41adf222cd0c0ebbf4c4b0ee09f24032d92ed8b69b8e07c3ffe4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentRandomSeed",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "PseudoRandomness",
            "src": "contracts\\source\\game\\utils\\random\\PseudoRandomness.sol:24"
          },
          {
            "label": "targets",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_address)",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:69"
          },
          {
            "label": "confrontations",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Confrontation)21986_storage)",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:72"
          },
          {
            "label": "plunders",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Plunder)21997_storage))",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:75"
          },
          {
            "label": "navalBattleMechanicsContract",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:78"
          },
          {
            "label": "playerRegisterContract",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:79"
          },
          {
            "label": "assetRegisterContract",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:80"
          },
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:81"
          },
          {
            "label": "shipContract",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:82"
          },
          {
            "label": "fuelContact",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:83"
          },
          {
            "label": "intentoriesContract",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "CryptopiaPirateMechanics",
            "src": "contracts\\source\\game\\mechanics\\pirate\\concrete\\CryptopiaPirateMechanics.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Plunder)21997_storage))": {
            "label": "mapping(address => mapping(address => struct Plunder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Confrontation)21986_storage)": {
            "label": "mapping(address => struct Confrontation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Plunder)21997_storage)": {
            "label": "mapping(address => struct Plunder)",
            "numberOfBytes": "32"
          },
          "t_struct(Confrontation)21986_storage": {
            "label": "struct Confrontation",
            "members": [
              {
                "label": "attacker",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "location",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "arrival",
                "type": "t_uint64",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expiration",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "escapeAttempted",
                "type": "t_bool",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Plunder)21997_storage": {
            "label": "struct Plunder",
            "members": [
              {
                "label": "deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loot_hot",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "loot_hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    },
    "1e1f1830d096057dcc0f79458dafa0d7ce77b7975f038260dd3c68070b50501e": {
      "address": "0x2e6F80D185a260e77fE3AEc43c4ac54DDA800eA1",
      "txHash": "0x98d3fe0a2a7607988f116487c4861beac4c7dfd943a9553680d0517312df874c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "mapsContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CryptopiaMapsExtensions",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMapsExtensions.sol:18"
          },
          {
            "label": "titleDeedContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CryptopiaMapsExtensions",
            "src": "contracts\\source\\game\\maps\\concrete\\CryptopiaMapsExtensions.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
